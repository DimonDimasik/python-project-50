name: CI with SonarCloud

on:
  - push
  - pull_request

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup UV
        uses: astral-sh/setup-uv@v2
        with:
          python-version: '3.10'
          enable-cache: true

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e . pytest pytest-cov coverage

      - name: Clean previous coverage
        run: |
          rm -f .coverage coverage.xml

      - name: Generate coverage with relative paths
        run: |
          source .venv/bin/activate

          cd $GITHUB_WORKSPACE

          python -c "
          import coverage
          import pytest
          import os
          
          print('Current working directory:', os.getcwd())
          print('Files in directory:', os.listdir('.'))
          
          cov = coverage.Coverage(
              source=['.'],
              omit=['tests/*', '__pycache__/*', '.venv/*'],
              config_file=False
          )
          
          cov.start()
          exit_code = pytest.main(['tests/'])
          cov.stop()
          cov.save()
          cov.xml_report(outfile='coverage.xml')
          "
          
          echo "Coverage generation completed"

      - name: Verify and fix coverage
        run: |
          cd $GITHUB_WORKSPACE
          echo "=== RAW COVERAGE.XML ==="
          head -10 coverage.xml
          echo "=== PATHS IN COVERAGE ==="
          grep "filename=" coverage.xml | head -3

          sed -i 's|/.*/python-project-50/||g' coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=dimondimasik
            -Dsonar.projectKey=DimonDimasik_python-project-50
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.tests=tests
            -Dsonar.python.version=3.10
            -Dsonar.exclusions=**/tests/**,**/__pycache__/**,**/.venv/**
