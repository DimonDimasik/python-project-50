name: CI with SonarCloud

on:
  - push
  - pull_request

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup UV
        uses: astral-sh/setup-uv@v2
        with:
          python-version: '3.10'
          enable-cache: true

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e . pytest pytest-cov coverage

      - name: Clean previous coverage
        run: |
          rm -f .coverage coverage.xml

      - name: Run tests with proper coverage
        run: |
          source .venv/bin/activate
          cd $GITHUB_WORKSPACE
          python -m coverage run --source=. --omit="tests/*,__pycache__/*,.venv/*" -m pytest tests/
          python -m coverage xml -i

      - name: Verify coverage file
        run: |
          echo "=== COVERAGE FILE INFO ==="
          ls -la coverage.xml
          echo "File size: $(du -h coverage.xml)"
          echo "First few lines:"
          head -5 coverage.xml
          echo "XML validity check:"
          python -c "
          import xml.etree.ElementTree as ET
          try:
              ET.parse('coverage.xml')
              print('✅ XML is valid')
          except Exception as e:
              print('❌ XML is invalid:', e)
          "

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=dimondimasik
            -Dsonar.projectKey=DimonDimasik_python-project-50
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.tests=tests
            -Dsonar.python.version=3.10
            -Dsonar.exclusions=**/tests/**,**/__pycache__/**,**/.venv/**
